RF_phenotype_classify <- randomForest( x=x , y=y , ntree=1000, mtry = 14, importance=TRUE, proximities=TRUE  )
RF_phenotype_classify_sig <- rf.significance( x=RF_phenotype_classify ,  xdata=x , nperm=1000 , ntree=1000)
RF_phenotype_classify
RF_phenotype_classify_sig
# get feature importance, sort by mean decrease in accuracy a
RF_phenotype_classify_importances <- as.data.frame( RF_phenotype_classify$importance )
RF_phenotype_classify_importances$features <- rownames( RF_phenotype_classify_importances )
RF_phenotype_classify_importances_sorted <- arrange( RF_phenotype_classify_importances  , desc(MeanDecreaseAccuracy)  )
write.csv(RF_phenotype_classify_importances_sorted, file= "feature_importances_tumor_12cc.csv")
packages <- c("randomForest", "plyr", "rfUtilities", "caret", "ggplot2", "ROCR")
InsPack <- function(pack)
{
if ((pack %in% installed.packages()) == FALSE) {
install.packages(pack,repos ="http://cloud.r-project.org/")
}
}
lapply(packages, InsPack)
lib <- lapply(packages, require, character.only = TRUE)
flag <- all(as.logical(lib))
if(!flag) { stop("
It was not possible to install all required R libraries properly.
Please check the installation of all required libraries manually.\n
Required libaries: randomForest, plyr, rfUtilities, caret, pROC")
}
####################################################################################################################################################
# Set working directory manually
home <- "C:/Users/adam-/ml_R/ml_R/feature_extraction"
work <- "C:/Users/PhD/ml_R/ml_R/feature_extraction/"
setwd(work)
####################################################################################################################################################
# load data
otu_table <- read.table("otu_12_cc.csv", sep=",", header=T, row.names=1, stringsAsFactors=FALSE, comment.char="", check.names=FALSE)
metadata <- read.table("metadata_12_cc.csv", sep=",", header=T, row.names=1, stringsAsFactors=TRUE, comment.char="", check.names=FALSE)
# scale pre-preprocessed training data (normalised relative abundance filtered 1% abundance in at least one sample) and merge phenotype column from metadata
otu_table_scaled <- scale(otu_table, center = TRUE, scale = TRUE)
otu_table_scaled_Phenotype <- data.frame(t(otu_table_scaled))
otu_table_scaled_Phenotype$Phenotype <- metadata[rownames(otu_table_scaled_Phenotype), "Phenotype"]
# set random seed to 42
set.seed(42)
# set x and y
x <- otu_table_scaled_Phenotype[,1:(ncol(otu_table_scaled_Phenotype)-1)]
y <- otu_table_scaled_Phenotype[ , ncol(otu_table_scaled_Phenotype)]
# classify training set and test significance
RF_phenotype_classify <- randomForest( x=x , y=y , ntree=300, mtry = 14, importance=TRUE, proximities=TRUE  )
RF_phenotype_classify_sig <- rf.significance( x=RF_phenotype_classify ,  xdata=x , nperm=1000 , ntree=300)
RF_phenotype_classify
RF_phenotype_classify_sig
# get feature importance, sort by mean decrease in accuracy a
RF_phenotype_classify_importances <- as.data.frame( RF_phenotype_classify$importance )
RF_phenotype_classify_importances$features <- rownames( RF_phenotype_classify_importances )
RF_phenotype_classify_importances_sorted <- arrange( RF_phenotype_classify_importances  , desc(MeanDecreaseAccuracy)  )
write.csv(RF_phenotype_classify_importances_sorted, file= "feature_importances_tumor_12cc.csv")
setwd("C:/Users/PhD/ml_R/ml_R/feature_extraction/heatmap_12")
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
rm(list=ls())
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor 12wk caecal content", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "bottom") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "bottom") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
#asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
#df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[3] <- lapply(df_tg_melt[3], log2)
df_tg_melt[is.infinite(df_tg_melt)] <- NA
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
#df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[3] <- lapply(df_fl_melt[3], log2)
df_fl_melt[is.infinite(df_fl_melt)] <- NA
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "bottom") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "bottom") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
View(df_tg_melt)
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
#asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
#df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[3] <- lapply(df_tg_melt[3], log2)
df_tg_melt[mapply(is.infinite, df_tg_melt)] <- NA
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
#df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[3] <- lapply(df_fl_melt[3], log2)
df_fl_melt[mapply(is.infinite, df_fl_melt)] <- NA
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "bottom") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "bottom") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
#asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
#df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[3] <- lapply(df_tg_melt[3], log2)
df_tg_melt[mapply(is.infinite, df_tg_melt)] <- NA
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
#df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[3] <- lapply(df_fl_melt[3], log2)
df_fl_melt[mapply(is.infinite, df_fl_melt)] <- NA
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "none")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
library(tidyverse)
library(RColorBrewer)
library(reshape2)
library(gtools)
# arcsine transform function
#asinTransform <- function(p) { asin(sqrt(p/100)) }
# read input
df_tg <- read.csv("tg_recipients.csv", header = TRUE, check.names = FALSE)
df_fl <- read.csv("fl_recipients.csv", header = TRUE, check.names = FALSE)
df_tg_prev <- read.csv("tg_recipients_prev.csv", header = TRUE, check.names = FALSE)
df_fl_prev <- read.csv("fl_recipients_prev.csv", header = TRUE, check.names = FALSE)
minval <- 0.025
df_tg[df_tg<minval]=0
df_fl[df_fl<minval]=0
df_tg_melt <- melt(df_tg)
#df_tg_melt[3] <- lapply(df_tg_melt[3], asinTransform)
df_tg_melt[3] <- lapply(df_tg_melt[3], log2)
df_tg_melt[mapply(is.infinite, df_tg_melt)] <- NA
df_tg_melt[is.na(df_tg_melt)]<- 0
df_fl_melt <- melt(df_fl)
#df_fl_melt[3] <- lapply(df_fl_melt[3], asinTransform)
df_fl_melt[3] <- lapply(df_fl_melt[3], log2)
df_fl_melt[mapply(is.infinite, df_fl_melt)] <- NA
df_fl_melt[is.na(df_fl_melt)]<- -10
tg_melt <- melt(df_tg_prev)
fl_melt <- melt(df_fl_prev)
hm.palette <- colorRampPalette((brewer.pal(9,"Greens")), space='Lab')
hm.palette2 <- colorRampPalette((brewer.pal(6, "Reds")), space="Lab")
p_abundance_fl <- ggplot(df_fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "none") +
theme(axis.text.y =element_text(size = 7), axis.text.x = element_blank()) +
ylab(NULL) + xlab(NULL) + geom_vline(xintercept = 8.5, color = "black")
p_abundance_fl + labs(title= "fl/fl donor 12wk caecal content", subtitle= "                  NT                         T")
p_abundance_tg <- ggplot(df_tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed(expand = FALSE) +
scale_fill_gradientn(colours = hm.palette(10)) + theme(legend.position = "bottom") +
theme(axis.text.x=element_blank(), axis.text.y=element_blank()) +
ylab(NULL) + xlab(NULL) +  geom_vline(xintercept = 1.5, color = "black")
print(p_abundance_tg + labs(title="tg/tg donor", subtitle = " NT                    T"))
p_prev_fl <- ggplot(fl_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) +  theme(legend.position = "none") +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_fl + ggtitle(" NT T"))
p_prev_tg <- ggplot(tg_melt, aes(x = variable , y = OTU, fill = value)) + geom_tile() + coord_fixed() +
scale_fill_gradientn(colours = hm.palette2(10)) + theme(legend.position = "bottom")  +
theme(axis.text = element_blank()) + geom_vline(xintercept = 1.5, color = "black") +
xlab(NULL) + ylab(NULL)
print(p_prev_tg + ggtitle(" NT T"))
